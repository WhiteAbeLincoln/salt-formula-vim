{% set plugins = vim_config.get('plugins', {}) -%}
{% set config   = vim_config.get('config', {}) -%}
{% set settings = vim_config.get('settings', {}) -%}
{% set mappings = vim_config.get('mappings', {}) -%}
{% set lets = vim_config.get('lets', {}) -%}

{% macro set_config(value, default=None) -%}
{% if value is string %}
{{ value }}
{% else -%}
{% for key, val in value.items() -%}
{% if val is iterable and val is not mapping and val is not string -%}
{{ key + " " }}
{%- for item in val -%}
{{ item }}{{ " " if not loop.last else "" }}
{%- endfor -%}
{% else -%}
{{ key }} {{ val }}
{% endif -%}
{% endfor -%}
{% endif -%}
{% endmacro -%}

{% macro set_setting(value, default=None) -%}
{% if value is string %}
set {{ value }}
{% else -%}
{% for key, val in value.items() -%}
{% if val is iterable and val is not mapping -%}
set {{ key }}=
{%- for item in val -%}
{{ item }}{{ "," if not loop.last else "" }}
{%- endfor -%}
{% else -%}
set {{ key }}={{ val }}
{% endif -%}
{% endfor -%}
{% endif -%}
{% endmacro -%}

{% macro render_mapping(parameter, default=None) -%}
{%- if parameter is string -%}
{{ parameter }}
{% elif parameter | length > 1 -%}
{{ parameter.get('mode', 'map') }} {{ parameter.from }} {{ parameter.to }}
{% else -%}
{% for key, value in parameter.items() -%}
map {{ key }} {{ value }}
{% endfor -%}
{% endif -%}
{% endmacro -%}

{% macro set_let(parameter, default=None) -%}
{% set value = lets.get(parameter, default) -%}
{% if value is not none -%}
let {{ parameter }} = {{ value }}
{% endif -%}
{% endmacro -%}

{% macro render_plugin(plugin, default=None) -%}
{% if plugin is string -%}
Plug '{{ plugin }}'
{% elif plugin is mapping -%}
{% set options = plugin.get('options', {}) -%}
Plug '{{ plugin.name }}', {{ options }}
{% endif -%}
{% endmacro -%}


{% if grains['os'] == 'Arch' -%}
{{ set_config('runtime!', 'archlinux.vim') }}
{% endif -%}

{% if grains['os'] == 'Debian' -%}
{{ set_config('runtime!', 'debian.vim') }}
{% endif -%}

let vimplug_exists=expand('{{vim.share_dir + "/" + vim.plugin_manager_file}}')

if !filereadable(vimplug_exists)
  echo "Installing Vim-Plug"
  echo ""
  silent !\curl -fLo {{vim.share_dir + "/" + vim.plugin_manager_file}} --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  let g:not_finish_vimplug = "yes"

  autocmd VimEnter * PlugInstall
endif

""" Plugins 
call plug#begin('{{vim.share_dir + "/" + vim.plugin_dir}}')

{% for plugin in plugins -%}
{{ render_plugin(plugin) }}
{% endfor -%}

call plug#end()

{% for parameter in config -%}
{{ set_config(parameter) }}
{% endfor -%}

{% for parameter in settings -%}
{{ set_setting(parameter) }}
{% endfor -%}

{% for parameter in mappings -%}
{{ render_mapping(parameter) }}
{% endfor -%}

{% for parameter in lets -%}
{{ set_let(parameter) }}
{% endfor -%}
